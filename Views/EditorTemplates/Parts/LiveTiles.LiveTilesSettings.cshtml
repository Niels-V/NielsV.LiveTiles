@using NielsV.LiveTiles.Models;
@model LiveTilesSettingsPart
@{
    Script.Require("jQuery").AtFoot();
    Style.Include("media-library-picker-admin.css");
    Script.Require("jQueryColorBox").AtFoot();
    Style.Require("jQueryColorBox");
    Style.Include("colorpicker.css");
    Script.Include("colorpicker.js").AtFoot();
}
@using (Script.Foot())
{
    <script type="text/javascript">
        //<![CDATA[
        jQuery(function ($) {
            $('#LiveTilesSettings_TileColor').ColorPicker({
                onSubmit: function(hsb, hex, rgb, el) {
                    $(el).val(hex);
                    $('.tileColorExample').css('background-color', '#'+hex);
                    $(el).ColorPickerHide();
                },
                onBeforeShow: function () {
                    $(this).ColorPickerSetColor(this.value);
                }
            })
            .bind('keyup', function(){
                $(this).ColorPickerSetColor(this.value);
                $('.tileColorExample').css('background-color', '#' + this.value);

            });
                

            $(".PickImageUrl").click(function () {
                var currentButton = $(this);
                var adminIndex = location.href.toLowerCase().indexOf("/admin/");
                if (adminIndex === -1) return;
                var url = location.href.substr(0, adminIndex) + "/Admin/Orchard.MediaLibrary?dialog=true";
                $.colorbox({
                    href: url,
                    iframe: true,
                    reposition: true,
                    width: "90%",
                    height: "90%",
                    onLoad: function () {
                        // hide the scrollbars from the main window
                        $('html, body').css('overflow', 'hidden');
                        //$('#cboxClose').remove();
                    },
                    onClosed: function () {
                        $('html, body').css('overflow', '');

                        var selectedData = $.colorbox.selectedData;

                        if (selectedData == null) // Dialog cancelled, do nothing
                            return;

                        var newContent = '';
                        console.debug('returned', selectedData);
                        if (selectedData.length == 1) {
                            currentButton.parent().find('.imageSource').attr('src',selectedData[0].resource);
                            currentButton.parent().find('.imageUrl').val(selectedData[0].resource);
                        }
                    }
                });

            });
        });
        //]]>
    </script>
}
<fieldset>
    <legend>@T("LiveTiles")</legend>
    <div>
        <label for="LiveTilesSettings_SmallTileUrl">@T("Small Tile URL")</label>
        @Html.TextBoxFor(m => m.SmallTileUrl, new { @class = "textMedium imageUrl" })
        <input type="button" class="button PickImageUrl" value="Pick Image" />
        @if (!String.IsNullOrWhiteSpace(Model.SmallTileUrl))
        {
            <div style="display:inline-block;width:70px;height:70px; overflow:hidden;">
                <img src="@Model.SmallTileUrl" alt="The current small tile" id="SmallTitleImg" class="imageSource tileColorExample" style="height:100%;width: auto;" />
            </div>
        }
        @Html.ValidationMessage("SmallTileUrl", "*")
        
    </div>
    <div>
        <label for="LiveTilesSettings_MediumTileUrl">@T("Medium Tile URL")</label>
        @Html.TextBoxFor(m => m.MediumTileUrl, new { @class = "textMedium imageUrl" })
        <input type="button" class="button PickImageUrl" value="Pick Image" />
        @if (!String.IsNullOrWhiteSpace(Model.MediumTileUrl))
        {
            <div style="display:inline-block;width:150px;height:150px; overflow:hidden;">
                <img src="@Model.MediumTileUrl" alt="The current Medium tile" id="MediumTitleImg" class="imageSource tileColorExample" style="height:100%;width: auto;" />
            </div>
        }
        @Html.ValidationMessage("MediumTileUrl", "*")

            </div>
    <div>
        <label for="LiveTilesSettings_LargeTileUrl">@T("Large Tile URL")</label>
        @Html.TextBoxFor(m => m.LargeTileUrl, new { @class = "textMedium imageUrl" })
        <input type="button" class="button PickImageUrl" value="Pick Image" />
                @if (!String.IsNullOrWhiteSpace(Model.LargeTileUrl))
        {
            <div style="display:inline-block;width:310px;height:310px; overflow:hidden;">
                <img src="@Model.LargeTileUrl" alt="The current Large tile" id="LargeTitleImg" class="imageSource tileColorExample" style="height:100%;width: auto;" />
            </div>
        }
        @Html.ValidationMessage("LargeTileUrl", "*")

    </div>
    <div>
        <label for="LiveTilesSettings_WideTileUrl">@T("Wide Tile URL")</label>
        @Html.TextBoxFor(m => m.WideTileUrl, new { @class = "textMedium imageUrl" })
        <input type="button" class="button PickImageUrl" value="Pick Image" />
                @if (!String.IsNullOrWhiteSpace(Model.WideTileUrl))
        {
            <div style="display:inline-block;width:310px;height:150px; overflow:hidden;">
                <img src="@Model.WideTileUrl" alt="The current Wide tile" id="WideTitleImg" class="imageSource tileColorExample" style="height:100%;width: auto;" />
            </div>
        }
        @Html.ValidationMessage("WideTileUrl", "*")

    </div>
    <div>
        <label for="LiveTilesSettings_TileColor">@T("Tile Color")</label>
        @Html.TextBoxFor(m => m.TileColor, new { @class = "textMedium" })
        <div style="display:inline-block; width: 2em; height: 1.2em;" class="tileColorExample" >&nbsp;</div>
        @if (!String.IsNullOrWhiteSpace(Model.TileColor))
        {
            using (Script.Foot())
            {
                <script type="text/javascript">
                    //<![CDATA[
                    jQuery(function ($) {
                        $('.tileColorExample').css('background-color', '#@Model.TileColor ');
                    });
                    //]]>
                </script>
            }
        }
        </div>
</fieldset>